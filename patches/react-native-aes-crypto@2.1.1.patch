diff --git a/android/src/main/java/com/tectiv3/aes/RCTAes.java b/android/src/main/java/com/tectiv3/aes/RCTAes.java
index 5871b6f0cc0b01754f2265e13e804c8b5ecc8c19..b07988fe3a72c5c0ecc8d15552259630b976458e 100755
--- a/android/src/main/java/com/tectiv3/aes/RCTAes.java
+++ b/android/src/main/java/com/tectiv3/aes/RCTAes.java
@@ -179,7 +179,7 @@ public class RCTAes extends ReactContextBaseJavaModule {
     throws NoSuchAlgorithmException, InvalidKeySpecException, UnsupportedEncodingException
     {
         PKCS5S2ParametersGenerator gen = new PKCS5S2ParametersGenerator(new SHA512Digest());
-        gen.init(pwd.getBytes("UTF_8"), salt.getBytes("UTF_8"), cost);
+        gen.init(pwd.getBytes("UTF_8"), Base64.decode(salt, Base64.NO_WRAP), cost);
         byte[] key = ((KeyParameter) gen.generateDerivedParameters(length)).getKey();
         return bytesToHex(key);
     }
diff --git a/ios/RCTAes/lib/AesCrypt.m b/ios/RCTAes/lib/AesCrypt.m
index 4f20b49ee0c70e0858a442b5e0c733adc3fb8cfd..46a22c97efef4c751615802ae425e5e809f2e847 100755
--- a/ios/RCTAes/lib/AesCrypt.m
+++ b/ios/RCTAes/lib/AesCrypt.m
@@ -38,7 +38,7 @@
 + (NSString *) pbkdf2:(NSString *)password salt: (NSString *)salt cost: (NSInteger)cost length: (NSInteger)length {
     // Data of String to generate Hash key(hexa decimal string).
     NSData *passwordData = [password dataUsingEncoding:NSUTF8StringEncoding];
-    NSData *saltData = [salt dataUsingEncoding:NSUTF8StringEncoding];
+    NSData *saltData = [[NSData alloc] initWithBase64EncodedString:salt options:NSDataBase64DecodingIgnoreUnknownCharacters];

     // Hash key (hexa decimal) string data length.
     NSMutableData *hashKeyData = [NSMutableData dataWithLength:length/8];
@@ -69,7 +69,7 @@
     NSData *ivData = [self fromHex:iv];
     //    NSData *keyData = [key dataUsingEncoding:NSUTF8StringEncoding];
     size_t numBytes = 0;
-
+
     NSArray *aesAlgorithms = @[@"aes-128-cbc", @"aes-192-cbc", @"aes-256-cbc"];
     size_t item = [aesAlgorithms indexOfObject:algorithm];
     size_t keyLength;
